# -*- coding: utf-8 -*-
"""emission-data

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-P7tdVguhZaT3PkvAFpgxdsaOGUEEC4-
"""

from google.colab import files
uploaded = files.upload()

import zipfile
import pandas as pd

# Step 1: Unzip the file
with zipfile.ZipFile("emissions data.csv.zip", "r") as zip_ref:
    zip_ref.extractall()  # Extracts in current folder

# Step 2: Load the CSV
df = pd.read_csv("emissions data.csv")  # Use exact name inside ZIP
df.head()

import zipfile

with zipfile.ZipFile("emissions data.csv.zip", "r") as zip_ref:
    zip_ref.printdir()

import zipfile
import pandas as pd

# Step 1: Unzip the file
with zipfile.ZipFile("emissions data.csv.zip", "r") as zip_ref:
    zip_ref.extractall()

# Step 2: Load the actual CSV file
df = pd.read_csv("co2_emission.csv")
df.head()

# Keep only relevant columns
df = df[['Entity', 'Year', 'Annual CO₂ emissions (tonnes )']]

# Filter data for a single country — e.g., Afghanistan
country_data = df[df['Entity'] == 'Afghanistan'].dropna()

# Rename the emission column for easier access
country_data.rename(columns={'Annual CO₂ emissions (tonnes )': 'Emissions'}, inplace=True)

country_data.head()

from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error, r2_score
import matplotlib.pyplot as plt

# Drop 'Entity' and define features/target
X = country_data[['Year']]
y = country_data['Emissions']

# Train/test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create model and train
model = LinearRegression()
model.fit(X_train, y_train)

# Predict
y_pred = model.predict(X_test)

# Evaluation
mae = mean_absolute_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Absolute Error: {mae:.2f}")
print(f"R² Score: {r2:.4f}")

# Sort for cleaner plotting
sorted_indices = X_test['Year'].argsort()
X_test_sorted = X_test.iloc[sorted_indices]
y_test_sorted = y_test.iloc[sorted_indices]
y_pred_sorted = y_pred[sorted_indices]

# Plot
plt.figure(figsize=(10, 5))
plt.scatter(X_test_sorted, y_test_sorted, color='blue', label='Actual')
plt.plot(X_test_sorted, y_pred_sorted, color='red', label='Predicted')
plt.xlabel("Year")
plt.ylabel("CO₂ Emissions (tonnes)")
plt.title("Afghanistan CO₂ Emissions Prediction")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

